!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("rxjs")):"function"==typeof define&&define.amd?define("apollo-angular-link-http-common",["exports","rxjs"],r):r(e["ng.apolloLink.httpCommon"]={},e.rxjs)}(this,function(e,o){"use strict";var i=function(){return(i=Object.assign||function(e){for(var r,n=1,t=arguments.length;n<t;n++)for(var o in r=arguments[n])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)};e.prioritize=function t(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var n=e.find(function(e){return void 0!==e});return void 0===n?e[e.length-1]:n},e.fetch=function(t,e){var r=-1!==["POST","PUT","PATCH"].indexOf(t.method.toUpperCase()),n={};if(t.body.length){if(!r)return new o.Observable(function(e){return e.error(new Error("Batching is not available for GET requests"))});n={body:t.body}}else n=r?{body:t.body}:{params:Object.keys(t.body).reduce(function(e,r){var n=t.body[r];return e[r]=-1!==["variables","extensions"].indexOf(r.toLowerCase())?JSON.stringify(n):n,e},{})};return e.request(t.method,t.url,i({observe:"response",responseType:"json",reportProgress:!1},n,t.options))},e.mergeHeaders=function(e,n){return e&&n?n.keys().reduce(function(e,r){return e.set(r,n.getAll(r))},e):n||e},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng.apolloLink.httpCommon.umd.min.js.map